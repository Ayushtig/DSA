import java.util.*;
public class Solution {
    public static int minJumps(int []arr, int n) {
        double[] dp = new double[n + 1];

        Arrays.fill(dp, Double.MAX_VALUE);

        dp[0] = 0;

        for(int i=0; i<n; i++) {

            if(dp[i]!=Double.MAX_VALUE) {

                for(int coin =1; coin<=arr[i]; coin++) {

                    double nextPosition = i + coin;

                    if(nextPosition < n) {

                      dp[(int)nextPosition] = Math.min(1 + dp[i], dp[(int) nextPosition]);

                    }

                }

            }

        }

     return dp[n-1]==Double.MAX_VALUE ? -1 : (int)dp[n-1];
    }
}
