class Solution {
    static int solve(int a[],int n,int k){
        int l=0;
        int r=0;
        int max=0;
        HashMap<Integer,Integer> map=new HashMap<>();
        while(r<n){
            map.put(a[r],map.getOrDefault(a[r],0)+1);
            while(map.size()>k){
                map.put(a[l],map.get(a[l])-1);
                if(map.get(a[l])==0) map.remove(a[l]);
                l++;
            }
            max+=r-l+1;
            r++;
        }
        return max;
    }
    public int subarraysWithKDistinct(int[] nums, int k) {
        int n=nums.length;
        return solve(nums,n,k)-solve(nums,n,k-1);  
    }
}
