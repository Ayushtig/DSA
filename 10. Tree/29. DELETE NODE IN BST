class Solution {
    static TreeNode helper(TreeNode root){
        if(root.left==null) return root.right;
        else if(root.right==null) return root.left;
        TreeNode rightchild=root.right;
        TreeNode lastrightchild=lastchild(root.left);
        lastrightchild.right=rightchild;
        return root.left;
    }
    static TreeNode lastchild(TreeNode root){
        if(root.right==null) return root;
        else return lastchild(root.right);
    }
    public TreeNode deleteNode(TreeNode root, int key) {
        if(root==null) return null;
        if(root.val==key) return helper(root);
        TreeNode node=root;
        while(root!=null){
            if(root.val>key){
                if(root.left!=null && root.left.val==key){
                    root.left=helper(root.left);
                    break;
                }
                else root=root.left;
            }
            else{
                if(root.right!=null && root.right.val==key){
                    root.right=helper(root.right);
                    break;
                }
                else root=root.right;
            }
        }
        return node;        
    }
}
