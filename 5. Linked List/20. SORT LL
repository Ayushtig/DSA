public class Solution {
    static Node merge(Node left,Node right){
        Node dummy=new Node(-1);
        Node temp=dummy;
        while(left!=null && right!=null){
            if(left.data < right.data){
                temp.next=left;
                temp=left;
                left=left.next;
            }
            else{
                temp.next=right;
                temp=right;
                right=right.next;
            }
        }
            if(left!=null)temp.next=left;
            else temp.next=right;
            return dummy.next;
    }
    static Node mergeSort(Node head){
        if(head.next==null || head==null)return head;
        Node mid=findMid(head);
        Node left=head;
        Node right=mid.next;
        mid.next=null;
        left=mergeSort(left);
        right=mergeSort(right);
        return merge(left,right);
    }
    static Node findMid(Node head){
        Node slow=head;
        Node fast=head;
        while(fast.next!=null && fast.next.next!=null){
            slow=slow.next;
            fast=fast.next.next;
        }
        return slow;
    }
    public static Node sortList(Node head) {
        return mergeSort(head);
    }
}
